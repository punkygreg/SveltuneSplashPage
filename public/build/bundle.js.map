{"version":3,"file":"bundle.js","sources":["../../src/lib/Hero.svelte","../../src/lib/About.svelte","../../src/lib/Subscriber.svelte","../../src/lib/MeetTheTeam.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["\n\n<div class=\"hero-container\">\n  <div class=\"hero-text\">\n    <h1 class=\"hero-header-text\">\n      X-Ray vision for debugging Svelte applications.\n    </h1>\n    <p class=\"hero-p-text\">\n      SvelteScope empowers developers to ship confident Svelte code by\n      pinpointing unexpected behaviors. Experiment with components\n      non-destructively - all within the browser.\n    </p>\n  </div>\n\n  <div class=\"hero-image-container\">\n    <img src=\"src/assets/propchanges.gif\" class=\"hero-gif\" />\n  </div>\n</div>\n\n<style>\n  @font-face {\n    font-family: SF-Compact-Display-Regular;\n    src: url('src/assets/fonts/SF-Compact-Display-Regular.otf')\n      format('truetype');\n  }\n\n  .hero-container {\n    margin-top: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    max-width: 600px;\n  }\n\n  .hero-header-text {\n    font-family: 'SF-Compact-Display-Bold';\n    color: white;\n    text-align: center;\n    font-size: 50px;\n    /* max-width: 650px; */\n    line-height: normal;\n  }\n\n  .hero-p-text {\n    font-family: 'SF-Compact-Display-Regular';\n    color: white;\n    text-align: center;\n    /* max-width: 650px; */\n  }\n\n  img {\n    margin-top: 26px;\n    max-width: 75vw;\n    height: auto;\n    border-radius: 25px;\n    background-position: center;\n    filter: drop-shadow(0px 0px 10pxrgba (255, 89, 0, 0.165) a);\n  }\n</style>\n","<div class=\"about-container section-container\">\n  <h1 class=\"section-h1-text\">What is SvelteScope?</h1>\n\n  <div class=\"about-content\">\n    <p class=\"body-text\">\n      Traditional debugging tools weren't built for the dynamic nature of\n      Svelte's state management, and the Svelte community lacks diverse\n      debugging/testing applications opposed to other popular JS frameworks like\n      React. That's why we created SvelteScope: a Svelte debugging and testing\n      application designed to untangle the complexities of state and make\n      testing a breeze.\n    </p>\n\n    <!-- VISUALLY DISECT COMPONENT HIERARCHIES -->\n    <div class=\"how-it-works-container\">\n      <div class=\"how-it-works-textbox\">\n        <h4 class=\"section-subheader-text\">\n          Visually disect component hierarchies.\n        </h4>\n        <p class=\"body-text\">\n          Gain a better understanding of your applicationâ€™s component hierarchy\n          from a tree diagram that dynamically renders when the DOM is updated.\n        </p>\n      </div>\n      <div class=\"how-it-works-img\">\n        <img src=\"src/assets/component-tree-example.png\" />\n      </div>\n    </div>\n  </div>\n\n  <!-- TRACK REACTIVE STATE CHANGES IN REAL-TIME -->\n  <div class=\"how-it-works-container reactive-changes-container\">\n    <div class=\"how-it-works-textbox\">\n      <h4 class=\"section-subheader-text\">\n        Track reactive state changes in real-time.\n      </h4>\n      <p class=\"body-text\">\n        Gain a better understanding of your applicationâ€™s component hierarchy\n        from a tree diagram that dynamically renders when the DOM is updated.\n      </p>\n    </div>\n    <div class=\"how-it-works-img\">\n      <img src=\"static/assets/props-example.png\" alt=\"Image of component tree\" />\n    </div>\n  </div>\n\n  <!-- Create as many snapshots as youâ€™d like (and easily switch between them!) -->\n  <div class=\"how-it-works-container\">\n    <div class=\"how-it-works-textbox\">\n      <h4 class=\"section-subheader-text\">\n        Create as many snapshots as youâ€™d like (and easily switch between them!)\n      </h4>\n      <p class=\"body-text about-body-text\">\n        Sometimes front-end testing can involve layers of setup - perhaps you\n        need to test your application in multiple languages, or multiple themes\n        (light vs. dark mode), and the like. With SvelteScope, you can create\n        multiple snapshots of state and easily switch between them to pinpoint\n        their differences.\n      </p>\n    </div>\n    <div class=\"how-it-works-img\">\n      <img\n        src=\"static/assets/snapshots-example.png\"\n        alt=\"Image of component tree\"\n      />\n    </div>\n  </div>\n</div>\n\n<style>\n  .about-body-text {\n    margin-bottom: 200px !important;\n  }\n\n  .about-container {\n    margin-top: 100px;\n  }\n\n  .reactive-changes-container {\n  }\n\n  h1 {\n    color: white;\n    font-size: 50px;\n  }\n\n  .how-it-works-container {\n    margin-top: 100px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 50vh;\n  }\n\n  @media only screen and (max-width: 650px) {\n    .how-it-works-container {\n      flex-direction: column;\n      text-align: center;\n      margin-top: 50px;\n    }\n\n    .how-it-works-textbox {\n      width: 100% !important;\n    }\n\n    .how-it-works-img > img {\n      width: 100%;\n    }\n\n    .about-body-text {\n      margin-bottom: 25px !important;\n    }\n  }\n\n  .section-subheader-text {\n    align-items: flex-start;\n    justify-content: flex-start;\n    line-height: normal;\n  }\n\n  .how-it-works-container > div {\n    width: 50%;\n  }\n\n  .how-it-works-img {\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  img {\n    width: 80%;\n    height: auto;\n    border-radius: 25px;\n  }\n</style>\n","<!-- EmailForm.svelte -->\n<script>\n  let email = '';\n  let submitted = false;\n  let errorMessage = '';\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:3333/email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      });\n      if (response.ok) {\n        console.log('Email saved successfully');\n\n        submitted = true;\n      } else {\n        console.error('Error saving email');\n        errorMessage = 'the email already is in use';\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n</script>\n\n<div class=\"subscription-container\">\n  <div class=\"subscription-text\">\n    <h2>Subscribe to our newsletter for future updates!</h2>\n  </div>\n  <div class=\"subscription-form\">\n    {#if !submitted}\n      <form on:submit={handleSubmit}>\n        <div class=\"email-input\">\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            id=\"email\"\n            bind:value={email}\n            required\n          />\n        </div>\n        <button type=\"submit\" class=\"subscribe-btn\">Subscribe</button>\n        {#if errorMessage}\n          <p class=\"error-message\">{errorMessage}</p>\n        {/if}\n      </form>\n    {:else}\n      <p class=\"success-message\">\n        Thank you for subscribing! You will receive updates at {email}.\n      </p>\n    {/if}\n  </div>\n</div>\n\n<style>\n  /* Existing styles */\n\n  form {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n  }\n\n  .email-input {\n    align-items: flex-end;\n  }\n\n  .subscribe-btn {\n    font-family: 'SF-Compact-Display-Semibold', sans-serif !important;\n    font-size: 20px;\n  }\n\n  label {\n    margin-right: 20px;\n    font-size: 20px;\n  }\n\n  input {\n    background: none;\n    color: white;\n    font-family: 'SF-Compact-Display-Thin', sans-serif;\n    font-size: 18px;\n    outline: none;\n  }\n\n  input::placeholder {\n    color: white;\n  }\n\n  .success-message {\n    color: white;\n    font-size: 24px;\n    text-align: center;\n  }\n\n  .subscription-container {\n    margin-top: 50px;\n    display: flex;\n    align-items: center;\n    width: 100%;\n    flex-direction: column;\n    padding: 20px;\n    border-radius: 40px;\n    border-color: white;\n  }\n\n  .subscription-form {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 75%;\n  }\n\n  #email {\n    width: 250px;\n    outline: none;\n    border: none;\n    border-bottom: 1px solid white;\n    border-radius: 0;\n  }\n\n  .subscription-text h2 {\n    font-family: 'SF-Compact-Display-Semibold';\n    /* font-family: 'SF-Compact-Display-Thin', sans-serif; */\n    color: orangered;\n    font-size: 24px;\n  }\n\n  .subscription-form label {\n    /* font-family: 'SF-Compact-Display-Bold'; */\n    font-family: 'SF-Compact-Display-Semibold', sans-serif;\n    color: white;\n    margin-bottom: 10px;\n  }\n\n  .subscription-form input {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 10px;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n    margin-top: 20px;\n  }\n  .subscription-form button {\n    color: white;\n    background-color: orangered;\n    font-family: 'SF-Compact-Display-Bold';\n\n    padding: 10px 20px;\n    border-radius: 10px;\n  }\n\n  .subscription-container {\n    margin-bottom: 200px;\n  }\n</style>\n","<div class=\"meet-the-team-container\">\n  <h1 class=\"section-h1-text\">Meet the team ðŸš€</h1>\n\n  <div class=\"teammates-container\">\n    <!-- branden -->\n    <div class=\"teammate\">\n      <img\n        src=\"src/assets/branden-headshot.jpeg\"\n        class=\"headshot-img branden\"\n      />\n      <div class=\"teammate-content\">\n        <h3 class=\"section-subheader-text\">Branden Basche</h3>\n        <a\n          class=\"body-text-link\"\n          href=\"https://www.linkedin.com/in/brandenbasche/\"\n          target=\"_blank\">LinkedIn</a\n        >\n        <a\n          class=\"body-text-link\"\n          href=\"https://github.com/brandenrbasche\"\n          target=\"_blank\">GitHub</a\n        >\n      </div>\n    </div>\n\n    <!-- binh -->\n    <div class=\"teammate\">\n      <img src=\"src/assets/binh-headshot.jpg\" class=\"headshot-img binh\" />\n      <div class=\"teammate-content\">\n        <h3 class=\"section-subheader-text\">Binh Nguyen</h3>\n        <a\n          class=\"body-text-link\"\n          href=\"https://www.linkedin.com/in/binh-nguyen-a07731101/\"\n          target=\"_blank\">LinkedIn</a\n        >\n        <a\n          class=\"body-text-link\"\n          href=\"https://github.com/binhnguyen96/\"\n          target=\"_blank\">GitHub</a\n        >\n      </div>\n    </div>\n\n    <!-- donald -->\n    <div class=\"teammate\">\n      <img src=\"src/assets/donald-headshot.jpg\" class=\"headshot-img donald\" />\n      <div class=\"teammate-content\">\n        <h3 class=\"section-subheader-text\">Donald Wong</h3>\n        <a\n          class=\"body-text-link\"\n          href=\"https://www.linkedin.com/in/donald-wong-93702931\"\n          target=\"_blank\">LinkedIn</a\n        >\n        <a\n          class=\"body-text-link\"\n          href=\"https://github.com/dwong92\"\n          target=\"_blank\">GitHub</a\n        >\n      </div>\n    </div>\n\n    <!-- james -->\n    <div class=\"teammate\">\n      <img src=\"src/assets/james-headshot.png\" class=\"headshot-img james\" />\n      <div class=\"teammate-content\">\n        <h3 class=\"section-subheader-text\">James Lee</h3>\n        <a\n          class=\"body-text-link\"\n          href=\"https://www.linkedin.com/in/james-lee-a7b2842b6/\"\n          target=\"_blank\">LinkedIn</a\n        >\n        <a\n          class=\"body-text-link\"\n          href=\"https://github.com/alphajames258\"\n          target=\"_blank\">GitHub</a\n        >\n      </div>\n    </div>\n\n    <!-- greg -->\n    <div class=\"teammate\">\n      <img src=\"src/assets/greg-headshot.jpg\" class=\"headshot-img greg\" />\n      <div class=\"teammate-content\">\n        <h3 class=\"section-subheader-text\">Gregory Valentin</h3>\n        <a\n          class=\"body-text-link\"\n          href=\"https://www.linkedin.com/in/gregory-valentin-a389b3221/\"\n          target=\"_blank\">LinkedIn</a\n        >\n        <a\n          class=\"body-text-link\"\n          href=\"https://github.com/punkygreg\"\n          target=\"_blank\">GitHub</a\n        >\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n  h1 {\n    text-align: center;\n  }\n\n  .teammates-container {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    align-content: center;\n    justify-content: center;\n  }\n\n  .teammate {\n    padding: 20px;\n  }\n\n  .branden {\n    object-position: 0px -40px;\n  }\n\n  .donald {\n    object-position: 0px -60px;\n  }\n\n  .james {\n    object-position: 0px -15px;\n  }\n\n  .greg {\n    object-position: 0px -60px;\n  }\n\n  a {\n    margin-right: 7px;\n  }\n\n  h3 {\n    color: white;\n    margin: 0;\n  }\n  .meet-the-team-container {\n    margin-top: 100px;\n  }\n\n  .headshot-img {\n    width: 200px;\n    height: 200px;\n    border-radius: 25px;\n    object-fit: cover;\n  }\n\n  @media only screen and (max-width: 700px) {\n    .meet-the-team-container {\n      margin-top: 100px;\n    }\n\n    .teammates-container {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n</style>\n","<script>\n  import Hero from './lib/Hero.svelte';\n  import About from './lib/About.svelte';\n  import  Subscriber  from  './lib/Subscriber.svelte';\n  import MeetTheTeam from './lib/MeetTheTeam.svelte';\n\n  // List of tab items with labels, values and assigned components\n  let activeTabValue = 0;\n\n  function smoothScroll(target) {\n    const element = document.getElementById(target);\n    if (element) {\n      window.scrollTo({\n        top: element.offsetTop - 100,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  document.addEventListener('DOMContentLoaded', function () {\n    const anchors = document.querySelectorAll('a[href^=\"#\"]');\n    anchors.forEach(function (anchor) {\n      anchor.addEventListener('click', function (event) {\n        event.preventDefault();\n        const target = anchor.getAttribute('href').substring(1);\n        smoothScroll(target);\n      });\n      anchor.addEventListener('click', async () => {});\n    });\n  });\n\n  const handleClick = (/** @type {number} */ tabValue)  => (activeTabValue = tabValue);\n</script>\n\n<div class=\"app-container\">\n  <header id=\"navbar\">\n    <svg\n      class=\"logo-svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"30\"\n      height=\"30\"\n      viewBox=\"0 0 48 48\"\n    >\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        d=\"m28.072 17.405l7.05-10.424c.584-.864-.168-2.002-1.192-1.805L15.308 8.773L7.993 19.589a2.352 2.352 0 0 0 .63 3.266l10.817 7.314l21.397-4.132l-8.633 12.765l-18.622 3.596c-1.024.198-1.776-.941-1.192-1.805l7.05-10.424l8.632-12.764l12.765 8.632\"\n      />\n    </svg>\n    <div id=\"title\" class=\"header\">\n      <h1>Svelte<span class=\"header-span\">Scope</span></h1>\n    </div>\n  </header>\n</div>\n\n<!-- HERO SECTION -->\n<section id=\"hero-section\">\n  <Hero />\n</section>\n\n<!-- ABOUT SECTION -->\n<section id=\"about-section\">\n  <About />\n</section>\n\n\n\n<!-- MEET THE TEAM SECTION -->\n<section id=\"meet-the-team-section\">\n  <MeetTheTeam />\n</section>\n\n<section >\n  <Subscriber />\n</section>\n\n<!-- OLD CODE: -->\n\n<!-- <script lang=\"ts\">\n  \n  // import Tabs from './lib/Tabs.svelte'\n  // import Router from \"./lib/Router.svelte\";\n  import Subscriber from \"./lib/Subscriber.svelte\";\n  import Docs from './lib/Docs.svelte';\n  import About from \"./lib/About.svelte\";\n  import Roadmap from './lib/Roadmap.svelte'; -->\n\n<!-- // import Tab1 from \"./Tab1.svelte\";\n\t// import Tab2 from \"./Tab2.svelte\";\n\t// import Tab3 from \"./Tab3.svelte\";\n//   import Router from \"./Router.svelte\";\n\n  // List of tab items with labels, values and assigned components -->\n<!-- let activeTabValue = 0;\n  let items = [\n    { label: \"About\",\n\t\t value: 1,\n\t\t id:\"#about\",\n\t\t},\n    { label: \"Roadmap\",\n\t\t value: 2,\n\t\t id: \"#roadmap\"\n\t\t},\n    { label: \"Subsribe To Newsletter\",\n\t\t value: 3,\n\t\t id:\"#subscriber\"\n\t\t}\n  ]; -->\n\n<!-- function smoothScroll(target) {\n  const element = document.getElementById(target);\n  if (element) {\n    window.scrollTo({\n      top: element.offsetTop - 100,\n      behavior: 'smooth',\n    });\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const anchors = document.querySelectorAll('a[href^=\"#\"]');\n  anchors.forEach(function(anchor) {\n    anchor.addEventListener('click', function(event) {\n      event.preventDefault();\n      const target = anchor.getAttribute('href').substring(1);\n      smoothScroll(target);\n    });\n    anchor.addEventListener('click', async () => {\n\n    })\n  });\n});\n\n  const handleClick = (tabValue: number) => () => (activeTabValue = tabValue);\n\n\n\n</script> -->\n\n<!-- <main>\n\n  <div id=\"navbar\">\n    <span id=\"logo\"><svg\n      class=\"logo-svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"30\"\n      height=\"30\"\n      viewBox=\"0 0 48 48\"\n    >\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        d=\"m28.072 17.405l7.05-10.424c.584-.864-.168-2.002-1.192-1.805L15.308 8.773L7.993 19.589a2.352 2.352 0 0 0 .63 3.266l10.817 7.314l21.397-4.132l-8.633 12.765l-18.622 3.596c-1.024.198-1.776-.941-1.192-1.805l7.05-10.424l8.632-12.764l12.765 8.632\"\n      />\n    </svg></span>\n    <span  id=\"title\" class=\"header\">\n      \n      <h1><span id=\"part1\">Svelte</span><span id=\"part2\">Scope</span></h1>\n      \n    </span>\n    <span id = \"menu\" class=\"header\">\n      <ul>\n    \n        {#each items as item}\n            <span> <a href={item.id} class=\"{activeTabValue === item.value ? 'active' : ''} tab\"   on:click={handleClick(item.value)}>\n                {item.label}\n            </span>\n        {/each}\n        \n            <span><a class=\"link\" href=\"https://github.com/oslabs-beta/Sveltune\" target=\"_blank\" rel=\"noreferrer\">Medium</a></span>\n            <span><a class=\"link\" href=\"https://github.com/oslabs-beta/Sveltune\" target=\"_blank\" rel=\"noreferrer\">Github</a></span>\n            <span><a class=\"link\" href=\"https://github.com/oslabs-beta/Sveltune\" target=\"_blank\" rel=\"noreferrer\">Download</a></span>\n        </ul>\n    </span>\n  </div> -->\n\n<!-- {#each items as item}\n        {#if activeTabValue == item.value}\n        <div class=\"box\">\n            <svelte:component this={item.component}/>\n        </div>\n        {/if}\n    {/each} -->\n\n<!-- <div id=\"pages\">\n  <div id=\"about\">\n    <About />\n  </div>\n  <div id=\"roadmap\">\n    <Roadmap />\n  </div>\n \n  \n\n  <div id=\"subscriber\">\n    <Subscriber/>\n  </div>\n</div>\n\n</main> -->\n\n<!-- <style> -->\n\n<!-- .header{\n  display: inline-block;\n} -->\n\n<!-- /* #tabs{\n        display: flex;\n        justify-content: flex-end;\n    } */\n\n    /* .link{\n        color: white;\n        transition: 0.25s ease-in;\n    } */\n    #navbar{\n      position: fixed;\n      top:0;\n      left:0;\n      width:100%; \n      /* background: black; */\n      /* opacity: 0.90; */\n      /* backdrop-filter: blur(10px); */\n      /* background-image: linear-gradient(to top, rgba(0,0,0,0), rgba(0,0,0,1)) */\n      \n      background: rgba(1, 1, 1, 0.0);\n      background: linear-gradient(0deg, rgba(1, 1, 1, 0.0) 0%,  rgba(1, 1, 1, 1.0) 30%);    \n    }\n\n    #title{\n      color: orangered;\n      opacity: 0.99;\n    }\n\n    #logo{\n      margin-left: 10px;\n    }\n\n    #part1{\n     font-weight:200;\n    }\n\n    #part2{\n     font-weight: bolder;\n    }\n\n    #pages{\n    padding-top:100px;\n  }\n\n   .tab{\n    border: 1px solid transparent;\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem;\n    color: white;\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n    transition: 0.25s ease-in;\n    font-weight: 400;\n  }\n\n\n  .link{ \n   transition: 0.25s ease-in; \n   padding: 0.5rem 1rem;\n   color: white;\n  }\n\n  .tab:hover, .link:hover {\n    color: orangered;\n  }\n\n  .active {\n    color: orange;\n  }\n\n\n\n</style> -->\n\n<style>\n  section {\n    width: 100vw;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  #hero-section {\n    margin-top: 25px;\n  }\n\n  #about-section {\n    /* height: 75vh; */\n    width: 100vw;\n  }\n\n  #meet-the-team-section {\n    margin-top: 50px;\n  }\n\n  .logo-svg {\n    stroke-width: 3px;\n    color: rgba(255, 68, 0, 0.308);\n    width: 25px;\n    height: 25px;\n    margin-right: 10px;\n    padding-bottom: 20px;\n  }\n\n  .header {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .header-span {\n    font-weight: 700;\n  }\n\n  .header > h1 {\n    display: inline-block;\n    font-weight: 100;\n    font-size: 24px;\n  }\n\n  #title {\n    margin-bottom: 20px;\n  }\n\n  #title > h1 {\n    font-family: 'SF-Compact-Display-Ultralight';\n    color: orangered;\n    font-weight: 100;\n  }\n\n  #title > h1 > span {\n    font-family: 'SF-Compact-Display-Semibold';\n  }\n\n  #navbar {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: rgba(1, 1, 1, 0);\n    background: linear-gradient(\n      0deg,\n      rgba(1, 1, 1, 0) 0%,\n      rgba(1, 1, 1, 1) 30%\n    );\n  }\n\n  /* #logo {\n    display: flex;\n    align-items: center;\n    margin-left: 10px;\n  }\n\n  #part1 {\n    font-weight: 200;\n  }\n\n  #part2 {\n    font-weight: bolder;\n  }\n\n  #pages {\n    padding-top: 100px;\n  }\n\n  .tab {\n    border: 1px solid transparent;\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem;\n    color: white;\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n    transition: 0.25s ease-in;\n    font-weight: 400;\n  }\n\n  .link {\n    transition: 0.25s ease-in;\n    padding: 0.5rem 1rem;\n    color: white;\n  }\n\n  .tab:hover,\n  .link:hover {\n    color: orangered;\n  }\n\n  .active {\n    color: orange;\n  } */\n</style>\n","import './app.css'\nimport App from './App.svelte'\n\nconst app = new App({\n  target: document.getElementById('app'),\n})\n\nexport default app\n"],"names":["insert","target","div2","anchor","div10","ctx","p","create_if_block_1","form","append","div","input","button","create_if_block","div0","div1","email","submitted","errorMessage","async","event","preventDefault","fetch","method","headers","body","JSON","stringify","ok","console","log","$$invalidate","error","this","value","div11","section0","section1","section2","section3","document","addEventListener","querySelectorAll","forEach","element","getElementById","window","scrollTo","top","offsetTop","behavior","smoothScroll","getAttribute","substring","App"],"mappings":"umBAEAA,EAAAA,OAeMC,EAAAC,EAAAC,koFCjBNH,EAAAA,OAmEMC,EAAAG,EAAAD,wNCd2B,oEAC+BE,EAAK,aAAC,+DADhEL,EAAAA,OAEIC,EAAAK,EAAAH,uEADsDE,EAAK,+DANxDA,EAAY,IAAAE,EAAAF,6bAXnBL,EAAAA,OAcOC,EAAAO,EAAAL,GAbLM,SAQMD,EAAAE,GAPJD,SAMEC,EAAAC,uBAFYN,EAAK,kBAIrBI,SAA8DD,EAAAI,oFAV/CP,EAAY,kCAMXA,EAAK,wBAALA,EAAK,IAKhBA,EAAY,yKACWA,EAAY,8CAAtCL,EAAAA,OAA2CC,EAAAK,EAAAH,2CAAjBE,EAAY,4EAbtCA,EAAS,KAAAQ,gXALnBb,EAAAA,OA2BMC,EAAAC,EAAAC,GA1BJM,SAEMP,EAAAY,iBACNL,SAsBMP,EAAAa,0JAvDF,IAAAC,EAAQ,GACRC,GAAY,EACZC,EAAe,gBAEJC,eAAaC,GAC1BA,EAAMC,4BAGmBC,MAAM,8BAA6B,CACxDC,OAAQ,OACRC,QAAO,CACL,eAAgB,oBAElBC,KAAMC,KAAKC,WAAYX,aAEZY,IACXC,QAAQC,IAAI,4BAEZC,EAAA,EAAAd,GAAY,KAEZY,QAAQG,MAAM,sBACdD,EAAA,EAAAb,EAAe,sCAEVc,GACPH,QAAQG,MAAM,SAAUA,gBAiBNhB,EAAKiB,KAAAC,koFC3C7BlC,EAAAA,OAiGMC,EAAAkC,EAAAhC,k+CC/DNH,EAAAA,OAqBMC,EAAAc,EAAAZ,mBAGNH,EAAAA,OAEUC,EAAAmC,EAAAjC,+CAGVH,EAAAA,OAEUC,EAAAoC,EAAAlC,+CAKVH,EAAAA,OAEUC,EAAAqC,EAAAnC,+CAEVH,EAAAA,OAEUC,EAAAsC,EAAApC,8jBAzDRqC,SAASC,iBAAiB,oBAAkB,WAC1BD,SAASE,iBAAiB,gBAClCC,SAAO,SAAWxC,GACxBA,EAAOsC,iBAAiB,kBAAmBrB,GACzCA,EAAMC,kBAdH,SAAapB,GACd,MAAA2C,EAAUJ,SAASK,eAAe5C,GACpC2C,GACFE,OAAOC,SAAQ,CACbC,IAAKJ,EAAQK,UAAY,IACzBC,SAAU,WAWVC,CADehD,EAAOiD,aAAa,QAAQC,UAAU,OAGvDlD,EAAOsC,iBAAiB,SAAOtB,+HCxBzB,IAAImC,EAAI,CAClBrD,OAAQuC,SAASK,eAAe"}